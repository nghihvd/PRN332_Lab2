// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRN232.Lab2.CoffeeStore.Repositories.Database;

#nullable disable

namespace PRN232.Lab2.CoffeeStore.Repositories.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "11111111-1111-1111-1111-111111111111",
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Various coffee beans",
                            Name = "Coffee Beans"
                        },
                        new
                        {
                            CategoryId = "22222222-2222-2222-2222-222222222222",
                            CreatedDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Brewing machines",
                            Name = "Coffee Machines"
                        },
                        new
                        {
                            CategoryId = "33333333-3333-3333-3333-333333333333",
                            CreatedDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coffee accessories",
                            Name = "Accessories"
                        },
                        new
                        {
                            CategoryId = "44444444-4444-4444-4444-444444444444",
                            CreatedDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Assorted tea leaves",
                            Name = "Tea"
                        },
                        new
                        {
                            CategoryId = "55555555-5555-5555-5555-555555555555",
                            CreatedDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coffee snacks",
                            Name = "Snacks"
                        });
                });

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = "bbbbbbb1-bbbb-bbbb-bbbb-bbbbbbbbbbb1",
                            OrderDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentId = "pay-cc",
                            Status = "Completed",
                            TotalAmount = 0m,
                            UserId = "user01"
                        },
                        new
                        {
                            OrderId = "bbbbbbb2-bbbb-bbbb-bbbb-bbbbbbbbbbb2",
                            OrderDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentId = "pay-pp",
                            Status = "Pending",
                            TotalAmount = 0m,
                            UserId = "user02"
                        },
                        new
                        {
                            OrderId = "bbbbbbb3-bbbb-bbbb-bbbb-bbbbbbbbbbb3",
                            OrderDate = new DateTime(2025, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentId = "pay-cc",
                            Status = "Shipped",
                            TotalAmount = 0m,
                            UserId = "user03"
                        },
                        new
                        {
                            OrderId = "bbbbbbb4-bbbb-bbbb-bbbb-bbbbbbbbbbb4",
                            OrderDate = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentId = "pay-na",
                            Status = "Cancelled",
                            TotalAmount = 0m,
                            UserId = "user01"
                        },
                        new
                        {
                            OrderId = "bbbbbbb5-bbbb-bbbb-bbbb-bbbbbbbbbbb5",
                            OrderDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentId = "pay-dc",
                            Status = "Completed",
                            TotalAmount = 0m,
                            UserId = "user04"
                        });
                });

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.OrderDetail", b =>
                {
                    b.Property<string>("OrderDetailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailId = "ccccccc1-cccc-cccc-cccc-ccccccccccc1",
                            OrderId = "bbbbbbb1-bbbb-bbbb-bbbb-bbbbbbbbbbb1",
                            ProductId = "aaaaaaa1-aaaa-aaaa-aaaa-aaaaaaaaaaa1",
                            Quantity = 2,
                            UnitPrice = 15.50m
                        },
                        new
                        {
                            OrderDetailId = "ccccccc2-cccc-cccc-cccc-ccccccccccc2",
                            OrderId = "bbbbbbb1-bbbb-bbbb-bbbb-bbbbbbbbbbb1",
                            ProductId = "aaaaaaa4-aaaa-aaaa-aaaa-aaaaaaaaaaa4",
                            Quantity = 1,
                            UnitPrice = 45.00m
                        },
                        new
                        {
                            OrderDetailId = "ccccccc3-cccc-cccc-cccc-ccccccccccc3",
                            OrderId = "bbbbbbb2-bbbb-bbbb-bbbb-bbbbbbbbbbb2",
                            ProductId = "aaaaaaa3-aaaa-aaaa-aaaa-aaaaaaaaaaa3",
                            Quantity = 1,
                            UnitPrice = 250.00m
                        },
                        new
                        {
                            OrderDetailId = "ccccccc4-cccc-cccc-cccc-ccccccccccc4",
                            OrderId = "bbbbbbb3-bbbb-bbbb-bbbb-bbbbbbbbbbb3",
                            ProductId = "aaaaaaa2-aaaa-aaaa-aaaa-aaaaaaaaaaa2",
                            Quantity = 3,
                            UnitPrice = 12.00m
                        },
                        new
                        {
                            OrderDetailId = "ccccccc5-cccc-cccc-cccc-ccccccccccc5",
                            OrderId = "bbbbbbb5-bbbb-bbbb-bbbb-bbbbbbbbbbb5",
                            ProductId = "aaaaaaa5-aaaa-aaaa-aaaa-aaaaaaaaaaa5",
                            Quantity = 5,
                            UnitPrice = 8.00m
                        });
                });

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.Payment", b =>
                {
                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentId = "pay-cc",
                            PaymentMethod = "Credit Card",
                            Status = "Active"
                        },
                        new
                        {
                            PaymentId = "pay-pp",
                            PaymentMethod = "PayPal",
                            Status = "Active"
                        },
                        new
                        {
                            PaymentId = "pay-dc",
                            PaymentMethod = "Debit Card",
                            Status = "Active"
                        },
                        new
                        {
                            PaymentId = "pay-cash",
                            PaymentMethod = "Cash",
                            Status = "Active"
                        },
                        new
                        {
                            PaymentId = "pay-na",
                            PaymentMethod = "N/A",
                            Status = "Inactive"
                        });
                });

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = "aaaaaaa1-aaaa-aaaa-aaaa-aaaaaaaaaaa1",
                            CategoryId = "11111111-1111-1111-1111-111111111111",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Smooth coffee beans",
                            IsActive = true,
                            Name = "Arabica Beans",
                            Price = 15.50m
                        },
                        new
                        {
                            ProductId = "aaaaaaa2-aaaa-aaaa-aaaa-aaaaaaaaaaa2",
                            CategoryId = "11111111-1111-1111-1111-111111111111",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Strong coffee beans",
                            IsActive = true,
                            Name = "Robusta Beans",
                            Price = 12.00m
                        },
                        new
                        {
                            ProductId = "aaaaaaa3-aaaa-aaaa-aaaa-aaaaaaaaaaa3",
                            CategoryId = "22222222-2222-2222-2222-222222222222",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Automatic espresso maker",
                            IsActive = true,
                            Name = "Espresso Machine",
                            Price = 250.00m
                        },
                        new
                        {
                            ProductId = "aaaaaaa4-aaaa-aaaa-aaaa-aaaaaaaaaaa4",
                            CategoryId = "33333333-3333-3333-3333-333333333333",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electric grinder",
                            IsActive = true,
                            Name = "Coffee Grinder",
                            Price = 45.00m
                        },
                        new
                        {
                            ProductId = "aaaaaaa5-aaaa-aaaa-aaaa-aaaaaaaaaaa5",
                            CategoryId = "44444444-4444-4444-4444-444444444444",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Refreshing green tea",
                            IsActive = true,
                            Name = "Green Tea",
                            Price = 8.00m
                        });
                });

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.Order", b =>
                {
                    b.HasOne("PRN232.Lab2.CoffeeStore.Repositories.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.OrderDetail", b =>
                {
                    b.HasOne("PRN232.Lab2.CoffeeStore.Repositories.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId");

                    b.HasOne("PRN232.Lab2.CoffeeStore.Repositories.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.Product", b =>
                {
                    b.HasOne("PRN232.Lab2.CoffeeStore.Repositories.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("PRN232.Lab2.CoffeeStore.Repositories.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
